{"version":3,"file":"true-json.js","mappings":"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","sources":["webpack://TrueJSON/./node_modules/lodash.isplainobject/index.js","webpack://TrueJSON/webpack/bootstrap","webpack://TrueJSON/webpack/runtime/compat get default export","webpack://TrueJSON/webpack/runtime/define property getters","webpack://TrueJSON/webpack/runtime/hasOwnProperty shorthand","webpack://TrueJSON/webpack/runtime/make namespace object","webpack://TrueJSON/./src/main/json/JsonConverter.ts","webpack://TrueJSON/./src/main/json/adapter/identity/getIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/utils.ts","webpack://TrueJSON/./src/main/json/adapter/assertions.ts","webpack://TrueJSON/./src/main/json/adapter/getArrayJsonAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/map/getMapAsEntriesAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getObjectAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getNullishAwareCustomAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/JsonAdapters.ts","webpack://TrueJSON/./src/main/json/adapter/identity/getStringIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/identity/getNumberIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/identity/getIntegerIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/identity/getBooleanIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getISODateAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getDateTimestampAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getSetAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getRecordAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/map/getMapAsRecordAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getByKeyAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getByKeyLenientAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getCustomAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getNullAwareCustomAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getUndefinedAwareCustomAdapter.ts","webpack://TrueJSON/./src/main/standalone-entry.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import JsonAdapter from '@/json/adapter/JsonAdapter';\n\ninterface CustomJSON {\n\tparse: JSON['parse'];\n\tstringify: JSON['stringify'];\n}\n\nexport default class JsonConverter<T> {\n\n\treadonly #json: CustomJSON;\n\treadonly #adapter: JsonAdapter<T, any>;\n\n\tconstructor(adapter: JsonAdapter<T, any>, json: CustomJSON = JSON) {\n\t\tthis.#json = json;\n\t\tthis.#adapter = adapter;\n\t}\n\n\tpublic stringify(value: T, space?: string | number) {\n\t\treturn this.#json.stringify(this.#adapter.adaptToJson(value), undefined, space);\n\t}\n\n\tpublic parse(text: string) {\n\t\treturn this.#adapter.recoverFromJson(this.#json.parse(text));\n\t}\n\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport type InputValueValidator = (value: unknown) => void;\n\nexport default function getIdentityAdapter<T extends JsonValue = JsonValue>(\n\t\tvalidator?: InputValueValidator\n): JsonAdapter<T, T> {\n\tif (validator == null) {\n\t\treturn {\n\t\t\tadaptToJson: v => v,\n\t\t\trecoverFromJson: v => v\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tadaptToJson: value => {\n\t\t\t\tvalidator(value);\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\trecoverFromJson: value => {\n\t\t\t\tvalidator(value);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t}\n}\n","export function hasOwnProperty(object: unknown, propertyName: PropertyKey): boolean {\n\treturn Object.prototype.hasOwnProperty.call(object, propertyName);\n}\n","import isPlainObject from 'lodash.isplainobject';\nimport {hasOwnProperty} from '@/json/adapter/utils';\nimport {MapEntry} from '@/json/adapter/map/types';\nimport {StringKeyOf} from '@/json/adapter/types';\n\nexport type TypeAssertion<T> = (value: unknown) => asserts value is T;\n\nexport const assertNonNullish: TypeAssertion<NonNullable<unknown>> = value => {\n\tif (value === null) {\n\t\tthrow new TypeError('input value is null');\n\t}\n\tif (value === undefined) {\n\t\tthrow new TypeError('input value is undefined');\n\t}\n};\n\nexport const assertBoolean: TypeAssertion<string> = value => {\n\tif (typeof value !== 'boolean') {\n\t\tthrow new TypeError('input value is not a boolean');\n\t}\n};\n\nexport const assertIntegerNumber: TypeAssertion<number> = value => {\n\tif (typeof value !== 'number' || !Number.isInteger(value)) {\n\t\tthrow new TypeError('input value is not an integer');\n\t}\n};\n\nexport const assertFiniteNumber: TypeAssertion<number> = value => {\n\tif (typeof value !== 'number' || !Number.isFinite(value)) {\n\t\tthrow new TypeError('input value is not a finite number');\n\t}\n};\n\nexport const assertString: TypeAssertion<string> = value => {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError('input value is not a string');\n\t}\n};\n\nexport const assertDateString: TypeAssertion<string> = value => {\n\tassertString(value);\n\n\tif (Number.isNaN(new Date(value).getTime())) {\n\t\tthrow new TypeError('input value has not a valid date format');\n\t}\n};\n\nexport const assertDate: TypeAssertion<Date> = value => {\n\tif (!(value instanceof Date)) {\n\t\tthrow new TypeError('input value is not a date');\n\t}\n};\n\nexport const assertValidDate: TypeAssertion<Date> = value => {\n\tassertDate(value);\n\n\tif (Number.isNaN(value.getTime())) {\n\t\tthrow new TypeError('input value is not a valid date');\n\t}\n};\n\nexport const assertArray: TypeAssertion<unknown[]> = value => {\n\tif (!Array.isArray(value)) {\n\t\tthrow new TypeError('input value is not an array');\n\t}\n};\n\nexport const assertSet: TypeAssertion<Set<unknown>> = value => {\n\tif (!(value instanceof Set)) {\n\t\tthrow new TypeError('input value is not a set');\n\t}\n};\n\nexport const assertMap: TypeAssertion<Map<unknown, unknown>> = value => {\n\tif (!(value instanceof Map)) {\n\t\tthrow new TypeError('input value is not a map');\n\t}\n};\n\nexport function assertEntryTuple(value: unknown): asserts value is MapEntry<unknown, unknown> {\n\tif (!Array.isArray(value) || value.length !== 2) {\n\t\tthrow new TypeError('input value is not a tuple');\n\t}\n}\n\nexport const assertPlainObject: TypeAssertion<Record<PropertyKey, unknown>> = value => {\n\tif (!isPlainObject(value)) {\n\t\tthrow new TypeError('input value is not a plain object');\n\t}\n};\n\nexport function assertStringKeyOf<T>(value: unknown, object: T): asserts value is StringKeyOf<T> {\n\tassertString(value);\n\n\tif (!hasOwnProperty(object, value)) {\n\t\tthrow new Error('input value is not a valid key');\n\t}\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertArray} from '@/json/adapter/assertions';\n\nexport default function getArrayJsonAdapter<T, U extends JsonValue = JsonValue>(\n\t\telementAdapter: JsonAdapter<T, U>\n): JsonAdapter<T[], JsonArray<U>> {\n\treturn {\n\t\tadaptToJson(array) {\n\t\t\tassertArray(array);\n\t\t\treturn array.map(e => elementAdapter.adaptToJson(e));\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\tassertArray(jsonArray);\n\t\t\treturn jsonArray.map(e => elementAdapter.recoverFromJson(e as U));\n\t\t}\n\t};\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport getArrayJsonAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\nimport {MapAdapterConfig, MapEntry} from '@/json/adapter/map/types';\nimport {assertEntryTuple, assertMap} from '@/json/adapter/assertions';\n\nexport default function getMapAsEntriesAdapter<K, V, JK extends JsonValue = JsonValue, JV extends JsonValue = JsonValue>(\n\t\tconfig?: Partial<MapAdapterConfig<K, V, JK, JV>>\n): JsonAdapter<Map<K, V>, JsonArray<MapEntry<JK, JV>>> {\n\n\tconst keyAdapter: JsonAdapter<K, JK> = config?.keyAdapter ?? getIdentityAdapter<any>();\n\tconst valueAdapter: JsonAdapter<V, JV> = config?.valueAdapter ?? getIdentityAdapter<any>();\n\n\tconst entriesAdapter = getArrayJsonAdapter<MapEntry<K, V>, MapEntry<JK, JV>>({\n\t\tadaptToJson(entry) {\n\n\t\t\tassertEntryTuple(entry);\n\n\t\t\tconst [key, value] = entry;\n\n\t\t\treturn [\n\t\t\t\tkeyAdapter.adaptToJson(key),\n\t\t\t\tvalueAdapter.adaptToJson(value)\n\t\t\t];\n\n\t\t},\n\t\trecoverFromJson(jsonEntry) {\n\n\t\t\tassertEntryTuple(jsonEntry);\n\n\t\t\tconst [jsonKey, jsonValue] = jsonEntry;\n\n\t\t\treturn [\n\t\t\t\tkeyAdapter.recoverFromJson(jsonKey),\n\t\t\t\tvalueAdapter.recoverFromJson(jsonValue)\n\t\t\t];\n\n\t\t}\n\t});\n\n\treturn {\n\t\tadaptToJson(map) {\n\t\t\tassertMap(map);\n\t\t\treturn entriesAdapter.adaptToJson([...map]);\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\treturn new Map(entriesAdapter.recoverFromJson(jsonArray));\n\t\t}\n\t};\n\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {StringKeyOf} from '@/json/adapter/types';\nimport {hasOwnProperty} from '@/json/adapter/utils';\nimport {assertPlainObject} from '@/json/adapter/assertions';\n\nexport type PropertyAdapters<T> = {\n\t[K in keyof T]?: JsonAdapter<T[K], JsonValueFor<T[K]>>;\n}\n\ntype JsonValueFor<T, U extends JsonValue = JsonValue> =\n\t\tU\n\t\t| (T extends null ? null : never)\n\t\t| (T extends undefined ? undefined : never);\n\nexport interface ObjectAdapterConfig<T extends object = object> {\n\tstrictPlainObjectCheck: boolean;\n\tomitUnmappedProperties: boolean;\n\tomittedProperties: (keyof T)[];\n}\n\nexport default function getObjectAdapter<T extends object>(\n\t\tpropertyAdapters: PropertyAdapters<T>,\n\t\tconfig?: Partial<ObjectAdapterConfig<T>>\n): JsonAdapter<T, JsonObject> {\n\n\tconst fullConfig = completeConfigWithDefaultValues(config);\n\n\treturn {\n\t\tadaptToJson(object) {\n\n\t\t\tif (fullConfig.strictPlainObjectCheck) {\n\t\t\t\tassertPlainObject(object);\n\t\t\t}\n\n\t\t\tconst mappedEntries = getObjectEntries(object, propertyAdapters, fullConfig)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\tconst adapter = propertyAdapters[key];\n\t\t\t\t\t\treturn [key, adapter ? adapter.adaptToJson(value) : value];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\n\t\t\tassertPlainObject(jsonObject);\n\n\t\t\tconst mappedEntries = getObjectEntries(jsonObject, propertyAdapters, fullConfig)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\tconst adapter: JsonAdapter<unknown, JsonValue> | undefined = propertyAdapters[key as keyof T];\n\t\t\t\t\t\treturn [key, adapter ? adapter.recoverFromJson(value) : value];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t}\n\t};\n\n}\n\nfunction completeConfigWithDefaultValues<T extends object>(\n\tpartialConfig?: Partial<ObjectAdapterConfig<T>>\n): ObjectAdapterConfig<T> {\n\treturn {\n\t\tstrictPlainObjectCheck: false,\n\t\tomitUnmappedProperties: false,\n\t\tomittedProperties: [],\n\t\t...partialConfig\n\t};\n}\n\nfunction getObjectEntries<T extends Record<string, any>>(object: T, propertyAdapters: PropertyAdapters<any>, config: ObjectAdapterConfig<any>) {\n\n\tconst {\n\t\tomitUnmappedProperties,\n\t\tomittedProperties\n\t} = config;\n\n\tconst entries: [StringKeyOf<T>, any][] = Object.entries(object);\n\n\tif (!omitUnmappedProperties && omittedProperties.length === 0) {\n\t\treturn entries;\n\t}\n\n\treturn entries.filter(([key]) => !shouldPropertyBeIgnored(key, propertyAdapters, config));\n\n}\n\nfunction shouldPropertyBeIgnored(propertyName: string, propertyAdapters: PropertyAdapters<any>, config: ObjectAdapterConfig<any>) {\n\treturn isIgnoredProperty(propertyName, config)\n\t\t\t|| config.omitUnmappedProperties && isUnmappedProperty(propertyName, propertyAdapters);\n}\n\nfunction isIgnoredProperty(propertyName: string, config: ObjectAdapterConfig<any>) {\n\tconst {omittedProperties} = config;\n\treturn omittedProperties.includes(propertyName);\n}\n\nfunction isUnmappedProperty(propertyName: string, propertyAdapters: PropertyAdapters<any>) {\n\treturn !hasOwnProperty(propertyAdapters, propertyName);\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getNullishAwareCustomAdapter<T, U extends JsonValue = JsonValue>(\n\t\tadapter: JsonAdapter<T, U>): JsonAdapter<T | null | undefined, U | null | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (isNullish(value)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn adapter.adaptToJson(value);\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (isNullish(value)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn adapter.recoverFromJson(value);\n\t\t}\n\t};\n}\n\nfunction isNullish(value: unknown): value is null | undefined {\n\treturn value == null;\n}\n","import getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\nimport getISODateAdapter from '@/json/adapter/getISODateAdapter';\nimport getDateTimestampAdapter from '@/json/adapter/getDateTimestampAdapter';\nimport getArrayJsonAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getSetAdapter from '@/json/adapter/getSetAdapter';\nimport getRecordAdapter from '@/json/adapter/getRecordAdapter';\nimport getMapAsEntriesAdapter from '@/json/adapter/map/getMapAsEntriesAdapter';\nimport getMapAsRecordAdapter from '@/json/adapter/map/getMapAsRecordAdapter';\nimport getObjectAdapter from '@/json/adapter/getObjectAdapter';\nimport getByKeyAdapter from '@/json/adapter/getByKeyAdapter';\nimport getByKeyLenientAdapter from '@/json/adapter/getByKeyLenientAdapter';\nimport getCustomAdapter from '@/json/adapter/getCustomAdapter';\nimport getNullishAwareCustomAdapter from '@/json/adapter/nullish/getNullishAwareCustomAdapter';\nimport getUndefinedAwareCustomAdapter from '@/json/adapter/nullish/getUndefinedAwareCustomAdapter';\nimport getNullAwareCustomAdapter from '@/json/adapter/nullish/getNullAwareCustomAdapter';\nimport getStringIdentityAdapter from '@/json/adapter/identity/getStringIdentityAdapter';\nimport getNumberIdentityAdapter from '@/json/adapter/identity/getNumberIdentityAdapter';\nimport getIntegerIdentityAdapter from '@/json/adapter/identity/getIntegerIdentityAdapter';\nimport getBooleanIdentityAdapter from '@/json/adapter/identity/getBooleanIdentityAdapter';\n\nconst JsonAdapters = {\n\tidentity: getIdentityAdapter,\n\tstringIdentity: getStringIdentityAdapter,\n\tnumberIdentity: getNumberIdentityAdapter,\n\tintegerIdentity: getIntegerIdentityAdapter,\n\tbooleanIdentity: getBooleanIdentityAdapter,\n\tisoDate: getISODateAdapter,\n\tdateTimestamp: getDateTimestampAdapter,\n\tarray: getArrayJsonAdapter,\n\tset: getSetAdapter,\n\trecord: getRecordAdapter,\n\tmapAsEntries: getMapAsEntriesAdapter,\n\tmapAsRecord: getMapAsRecordAdapter,\n\tobject: getObjectAdapter,\n\tbyKey: getByKeyAdapter,\n\tbyKeyLenient: getByKeyLenientAdapter,\n\tcustom: getCustomAdapter,\n\tnullAware: getNullAwareCustomAdapter,\n\tundefinedAware: getUndefinedAwareCustomAdapter,\n\tnullishAware: getNullishAwareCustomAdapter\n};\n\nexport default JsonAdapters;\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertString} from '@/json/adapter/assertions';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\n\nexport default function getStringIdentityAdapter(): JsonAdapter<string, string> {\n\treturn getIdentityAdapter(value => assertString(value));\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertFiniteNumber} from '@/json/adapter/assertions';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\n\nexport default function getNumberIdentityAdapter(): JsonAdapter<number, number> {\n\treturn getIdentityAdapter(value => assertFiniteNumber(value));\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertIntegerNumber} from '@/json/adapter/assertions';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\n\nexport default function getIntegerIdentityAdapter(): JsonAdapter<number, number> {\n\treturn getIdentityAdapter(value => assertIntegerNumber(value));\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\nimport {assertBoolean} from '@/json/adapter/assertions';\n\nexport default function getBooleanIdentityAdapter(): JsonAdapter<boolean, boolean> {\n\treturn getIdentityAdapter(value => assertBoolean(value));\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertDateString, assertValidDate} from '@/json/adapter/assertions';\n\nexport default function getISODateAdapter(): JsonAdapter<Date, string> {\n\treturn {\n\t\tadaptToJson(date) {\n\t\t\tassertValidDate(date);\n\t\t\treturn date.toJSON();\n\t\t},\n\t\trecoverFromJson(isoDateText) {\n\t\t\tassertDateString(isoDateText);\n\t\t\treturn new Date(isoDateText);\n\t\t}\n\t};\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertFiniteNumber, assertValidDate} from '@/json/adapter/assertions';\n\nexport default function getDateTimestampAdapter(): JsonAdapter<Date, number> {\n\treturn {\n\t\tadaptToJson(date) {\n\t\t\tassertValidDate(date);\n\t\t\treturn date.getTime();\n\t\t},\n\t\trecoverFromJson(timestamp) {\n\t\t\tassertFiniteNumber(timestamp);\n\t\t\treturn new Date(timestamp);\n\t\t}\n\t};\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport getArrayAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getIdentityAdapter from '@/json/adapter/identity/getIdentityAdapter';\nimport {assertArray, assertSet} from '@/json/adapter/assertions';\n\nexport default function getSetAdapter<T extends JsonValue = JsonValue>(): JsonAdapter<Set<T>, JsonArray<T>>;\nexport default function getSetAdapter<T, U extends JsonValue = JsonValue>(elementAdapter: JsonAdapter<T, U>): JsonAdapter<Set<T>, JsonArray<U>>;\nexport default function getSetAdapter<T, >(elementAdapter: JsonAdapter<T, any> = getIdentityAdapter()): JsonAdapter<Set<T>, JsonArray<any>> {\n\n\tconst arrayAdapter = getArrayAdapter(elementAdapter);\n\n\treturn {\n\t\tadaptToJson(set) {\n\t\t\tassertSet(set);\n\t\t\treturn arrayAdapter.adaptToJson([...set]);\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\tassertArray(jsonArray);\n\t\t\treturn new Set(arrayAdapter.recoverFromJson(jsonArray));\n\t\t}\n\t};\n\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertPlainObject} from '@/json/adapter/assertions';\n\nexport interface RecordAdapterConfig {\n\tstrictPlainObjectCheck: boolean;\n}\n\nexport default function getRecordAdapter<T, U extends JsonValue = JsonValue>(\n\t\tvalueAdapter: JsonAdapter<T, U>,\n\t\tconfig?: RecordAdapterConfig\n): JsonAdapter<Record<string, T>, JsonObject<U>> {\n\n\tconst fullConfig = completeConfigWithDefaultValues(config);\n\n\treturn {\n\t\tadaptToJson(object) {\n\n\t\t\tif (fullConfig.strictPlainObjectCheck) {\n\t\t\t\tassertPlainObject(object);\n\t\t\t}\n\n\t\t\tconst mappedEntries = Object.entries(object)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\treturn [key, valueAdapter.adaptToJson(value)];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\n\t\t\tassertPlainObject(jsonObject);\n\n\t\t\tconst mappedEntries = Object.entries(jsonObject)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\treturn [key, valueAdapter.recoverFromJson(value)];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t}\n\t};\n\n}\n\nfunction completeConfigWithDefaultValues(partialConfig?: Partial<RecordAdapterConfig>): RecordAdapterConfig {\n\treturn {\n\t\tstrictPlainObjectCheck: false,\n\t\t...partialConfig\n\t};\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport {MapAdapterConfig} from '@/json/adapter/map/types';\nimport getMapAsEntriesAdapter from '@/json/adapter/map/getMapAsEntriesAdapter';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertPlainObject} from '@/json/adapter/assertions';\n\nexport default function getMapAsRecordAdapter<K, V, JV extends JsonValue = JsonValue>(\n\t\tconfig?: Partial<MapAdapterConfig<K, V, string, JV>>\n): JsonAdapter<Map<K, V>, JsonObject<JV>> {\n\n\tconst mapAsEntriesAdapter = getMapAsEntriesAdapter(config);\n\n\treturn {\n\t\tadaptToJson(map) {\n\t\t\tconst adaptedEntries = mapAsEntriesAdapter.adaptToJson(map);\n\t\t\treturn Object.fromEntries(adaptedEntries);\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\t\t\tassertPlainObject(jsonObject);\n\t\t\tconst entries = Object.entries(jsonObject);\n\t\t\treturn mapAsEntriesAdapter.recoverFromJson(entries);\n\t\t}\n\t};\n\n}\n","import {StringKeyOf} from '@/json/adapter/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {assertStringKeyOf} from '@/json/adapter/assertions';\n\n// TODO improve types so unknown values are not accepted\nexport default function getByKeyAdapter<T, R extends Record<string, T>>(\n\t\tkeyValuePairs: R\n): JsonAdapter<T, StringKeyOf<R>> {\n\treturn {\n\t\tadaptToJson(value) {\n\n\t\t\tconst entry = Object.entries(keyValuePairs).find(([, entryValue]) => value === entryValue);\n\n\t\t\tif (entry) {\n\t\t\t\tconst [key] = entry;\n\t\t\t\treturn key;\n\t\t\t}\n\n\t\t\tthrow new Error('input value is not associated with any key');\n\n\t\t},\n\t\trecoverFromJson(key) {\n\t\t\tassertStringKeyOf(key, keyValuePairs);\n\t\t\treturn keyValuePairs[key];\n\t\t}\n\t};\n}\n","import {StringKeyOf} from '@/json/adapter/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {hasOwnProperty} from '@/json/adapter/utils';\nimport {assertString} from '@/json/adapter/assertions';\n\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T> = Record<string, T>>(keyValuePairs: R): JsonAdapter<T | undefined, StringKeyOf<R> | undefined>;\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T> = Record<string, T>>(keyValuePairs: R, fallbackKey: StringKeyOf<R>): JsonAdapter<T, StringKeyOf<R>>;\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T> = Record<string, T>>(keyValuePairs: R, fallbackKey?: StringKeyOf<R>): JsonAdapter<T | undefined, StringKeyOf<R> | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\n\t\t\tconst entry = Object.entries(keyValuePairs).find(([, entryValue]) => value === entryValue);\n\n\t\t\tif (entry) {\n\t\t\t\tconst [key] = entry;\n\t\t\t\treturn key;\n\t\t\t}\n\n\t\t\treturn fallbackKey;\n\n\t\t},\n\t\trecoverFromJson(key) {\n\n\t\t\tif (fallbackKey === undefined && key === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tassertString(key);\n\n\t\t\tif (hasOwnProperty(keyValuePairs, key)) {\n\t\t\t\treturn keyValuePairs[key];\n\t\t\t}\n\n\t\t\treturn fallbackKey != null ? keyValuePairs[fallbackKey] : undefined;\n\n\t\t}\n\t};\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\n// This method exists for type inference purposes only\nexport default function getCustomAdapter<T, U extends JsonValue = JsonValue>(adapter: JsonAdapter<T, U>): JsonAdapter<T, U> {\n\treturn adapter;\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getNullAwareCustomAdapter<T, U extends JsonValue = JsonValue>(\n\t\tadapter: JsonAdapter<T, U>): JsonAdapter<T | null, U | null> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn adapter.adaptToJson(value);\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn adapter.recoverFromJson(value);\n\t\t}\n\t};\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getUndefinedAwareCustomAdapter<T, U extends JsonValue = JsonValue>(\n\t\tadapter: JsonAdapter<T, U>): JsonAdapter<T | undefined, U | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn adapter.adaptToJson(value);\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn adapter.recoverFromJson(value);\n\t\t}\n\t};\n}\n","import * as TrueJSON from './json/exports';\n\nexport default TrueJSON;\n"],"names":["func","transform","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","objectToString","getPrototype","getPrototypeOf","arg","module","exports","value","isObjectLike","result","e","isHostObject","proto","Ctor","constructor","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","adapter","json","JSON","this","stringify","space","adaptToJson","parse","text","recoverFromJson","getIdentityAdapter","validator","v","object","propertyName","assertFiniteNumber","Number","isFinite","TypeError","assertString","assertValidDate","Date","assertDate","isNaN","getTime","assertArray","Array","isArray","assertMap","Map","assertEntryTuple","length","assertPlainObject","getArrayJsonAdapter","elementAdapter","array","map","jsonArray","getMapAsEntriesAdapter","config","keyAdapter","valueAdapter","entriesAdapter","entry","jsonEntry","jsonKey","jsonValue","getObjectEntries","propertyAdapters","omitUnmappedProperties","omittedProperties","entries","filter","includes","isIgnoredProperty","isUnmappedProperty","shouldPropertyBeIgnored","isNullish","identity","stringIdentity","numberIdentity","integerIdentity","isInteger","assertIntegerNumber","booleanIdentity","assertBoolean","isoDate","date","toJSON","isoDateText","assertDateString","dateTimestamp","timestamp","set","arrayAdapter","Set","assertSet","record","fullConfig","partialConfig","strictPlainObjectCheck","mappedEntries","fromEntries","jsonObject","mapAsEntries","mapAsRecord","mapAsEntriesAdapter","adaptedEntries","byKey","keyValuePairs","find","entryValue","Error","assertStringKeyOf","byKeyLenient","fallbackKey","custom","nullAware","undefinedAware","nullishAware"],"sourceRoot":""}