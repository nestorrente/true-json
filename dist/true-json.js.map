{"version":3,"sources":["webpack://TrueJSON/webpack/bootstrap","webpack://TrueJSON/webpack/runtime/define property getters","webpack://TrueJSON/webpack/runtime/hasOwnProperty shorthand","webpack://TrueJSON/webpack/runtime/make namespace object","webpack://TrueJSON/./src/main/json/JsonConverter.ts","webpack://TrueJSON/./src/main/json/adapter/getIdentityAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getArrayJsonAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/map/getMapAsEntriesAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getObjectAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/JsonAdapters.ts","webpack://TrueJSON/./src/main/json/adapter/getISODateAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getDateTimestampAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getSetAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getRecordAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/map/getMapAsRecordAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getByKeyAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getByKeyLenientAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/getCustomAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getNullAwareAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getUndefinedAwareAdapter.ts","webpack://TrueJSON/./src/main/json/adapter/nullish/getNullishAwareAdapter.ts","webpack://TrueJSON/./src/main/standalone-entry.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","JsonConverter","adapter","json","JSON","this","space","stringify","adaptToJson","undefined","text","recoverFromJson","parse","getIdentityAdapter","v","getArrayJsonAdapter","elementAdapter","array","map","e","jsonArray","getMapAsEntriesAdapter","config","keyAdapter","valueAdapter","entryAdapter","entry","jsonEntry","jsonKey","jsonValue","Map","getObjectEntries","object","propertyAdapters","omitUnmappedProperties","omittedProperties","entries","length","filter","propertyName","includes","isIgnoredProperty","isUnmappedProperty","shouldPropertyBeIgnored","identity","isoDate","date","toJSON","isoDateText","Date","dateTimestamp","getTime","timestamp","set","arrayAdapter","Set","record","mappedEntries","fromEntries","jsonObject","mapAsEntries","mapAsRecord","mapAsEntriesAdapter","adaptedEntries","fullConfig","partialConfig","byKey","keyValuePairs","find","entryValue","Error","byKeyLenient","fallbackKey","custom","nullAware","undefinedAware","nullishAware"],"mappings":"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","file":"true-json.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import JsonAdapter from '@/json/adapter/JsonAdapter';\n\ninterface CustomJSON {\n\tparse: JSON['parse'];\n\tstringify: JSON['stringify'];\n}\n\nexport default class JsonConverter<T> {\n\n\treadonly #json: CustomJSON;\n\treadonly #adapter: JsonAdapter<T, any>;\n\n\tconstructor(adapter: JsonAdapter<T, any>, json: CustomJSON = JSON) {\n\t\tthis.#json = json;\n\t\tthis.#adapter = adapter;\n\t}\n\n\tpublic stringify(value: T, space?: string | number) {\n\t\treturn this.#json.stringify(this.#adapter.adaptToJson(value), undefined, space);\n\t}\n\n\tpublic parse(text: string) {\n\t\treturn this.#adapter.recoverFromJson(this.#json.parse(text));\n\t}\n\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getIdentityAdapter<T extends JsonValue = JsonValue>(): JsonAdapter<T, T> {\n\treturn {\n\t\tadaptToJson: v => v,\n\t\trecoverFromJson: v => v\n\t};\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getArrayJsonAdapter<T, U extends JsonValue = JsonValue>(\n\t\telementAdapter: JsonAdapter<T, U>\n): JsonAdapter<T[], JsonArray<U>> {\n\treturn {\n\t\tadaptToJson(array) {\n\t\t\treturn array.map(e => elementAdapter.adaptToJson(e));\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\treturn jsonArray.map(e => elementAdapter.recoverFromJson(e as U));\n\t\t}\n\t};\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport getArrayJsonAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getIdentityAdapter from '@/json/adapter/getIdentityAdapter';\nimport {MapAdapterConfig, MapEntry} from '@/json/adapter/map/types';\n\nexport default function getMapAsEntriesAdapter<K, V, JK extends JsonValue = JsonValue, JV extends JsonValue = JsonValue>(\n\t\tconfig?: Partial<MapAdapterConfig<K, V, JK, JV>>\n): JsonAdapter<Map<K, V>, JsonArray<MapEntry<JK, JV>>> {\n\n\tconst keyAdapter: JsonAdapter<K, JK> = config?.keyAdapter ?? getIdentityAdapter<any>();\n\tconst valueAdapter: JsonAdapter<V, JV> = config?.valueAdapter ?? getIdentityAdapter<any>();\n\n\tconst entryAdapter = getArrayJsonAdapter<MapEntry<K, V>, MapEntry<JK, JV>>({\n\t\tadaptToJson(entry) {\n\n\t\t\tconst [key, value] = entry;\n\n\t\t\treturn [\n\t\t\t\tkeyAdapter.adaptToJson(key),\n\t\t\t\tvalueAdapter.adaptToJson(value)\n\t\t\t];\n\n\t\t},\n\t\trecoverFromJson(jsonEntry) {\n\n\t\t\tconst [jsonKey, jsonValue] = jsonEntry;\n\n\t\t\treturn [\n\t\t\t\tkeyAdapter.recoverFromJson(jsonKey),\n\t\t\t\tvalueAdapter.recoverFromJson(jsonValue)\n\t\t\t];\n\n\t\t}\n\t});\n\n\treturn {\n\t\tadaptToJson(map) {\n\t\t\treturn entryAdapter.adaptToJson([...map])!;\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\treturn new Map(entryAdapter.recoverFromJson(jsonArray));\n\t\t}\n\t};\n\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport {StringKeyOf} from '@/json/adapter/types';\n\nexport type PropertyAdapters<T> = {\n\t[K in keyof T]?: JsonAdapter<T[K], JsonValue | (T[K] extends null ? null : never) | (T[K] extends undefined ? undefined : never)>;\n}\n\nexport interface ObjectAdapterConfig<T> {\n\tomitUnmappedProperties: boolean;\n\tomittedProperties: (keyof T)[];\n}\n\nexport default function getObjectAdapter<T>(\n\t\tpropertyAdapters: PropertyAdapters<T>,\n\t\tconfig?: Partial<ObjectAdapterConfig<T>>\n): JsonAdapter<T, JsonObject> {\n\n\tconst fullConfig = getFullConfig(config);\n\n\treturn {\n\t\tadaptToJson(object) {\n\n\t\t\tconst mappedEntries = getObjectEntries(object, propertyAdapters, fullConfig)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\tconst adapter = propertyAdapters[key];\n\t\t\t\t\t\treturn [key, adapter ? adapter.adaptToJson(value) : value];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\n\t\t\tconst mappedEntries = getObjectEntries(jsonObject, propertyAdapters, fullConfig)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\tconst adapter: JsonAdapter<any, any> | undefined = propertyAdapters[key as keyof T];\n\t\t\t\t\t\treturn [key, adapter ? adapter.recoverFromJson(value) : value];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t}\n\t};\n}\n\nfunction getFullConfig<T>(partialConfig?: Partial<ObjectAdapterConfig<T>>): ObjectAdapterConfig<T> {\n\treturn {\n\t\tomitUnmappedProperties: false,\n\t\tomittedProperties: [],\n\t\t...partialConfig\n\t};\n}\n\nfunction getObjectEntries<T extends Record<string, any>>(object: T, propertyAdapters: PropertyAdapters<any>, config: ObjectAdapterConfig<any>) {\n\n\tconst {\n\t\tomitUnmappedProperties,\n\t\tomittedProperties\n\t} = config;\n\n\tconst entries: [StringKeyOf<T>, any][] = Object.entries(object);\n\n\tif (!omitUnmappedProperties && omittedProperties.length === 0) {\n\t\treturn entries;\n\t}\n\n\treturn entries.filter(([key]) => !shouldPropertyBeIgnored(key, propertyAdapters, config));\n\n}\n\nfunction shouldPropertyBeIgnored(propertyName: string, propertyAdapters: PropertyAdapters<any>, config: ObjectAdapterConfig<any>) {\n\treturn isIgnoredProperty(propertyName, config)\n\t\t\t|| config.omitUnmappedProperties && isUnmappedProperty(propertyName, propertyAdapters);\n}\n\nfunction isIgnoredProperty(propertyName: string, config: ObjectAdapterConfig<any>) {\n\tconst {omittedProperties} = config;\n\treturn omittedProperties.includes(propertyName);\n}\n\nfunction isUnmappedProperty(propertyName: string, propertyAdapters: PropertyAdapters<any>) {\n\treturn !propertyAdapters.hasOwnProperty(propertyName);\n}\n","import getIdentityAdapter from '@/json/adapter/getIdentityAdapter';\nimport getISODateAdapter from '@/json/adapter/getISODateAdapter';\nimport getDateTimestampAdapter from '@/json/adapter/getDateTimestampAdapter';\nimport getArrayJsonAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getSetAdapter from '@/json/adapter/getSetAdapter';\nimport getRecordAdapter from '@/json/adapter/getRecordAdapter';\nimport getMapAsEntriesAdapter from '@/json/adapter/map/getMapAsEntriesAdapter';\nimport getMapAsRecordAdapter from '@/json/adapter/map/getMapAsRecordAdapter';\nimport getObjectAdapter from '@/json/adapter/getObjectAdapter';\nimport getByKeyAdapter from '@/json/adapter/getByKeyAdapter';\nimport getByKeyLenientAdapter from '@/json/adapter/getByKeyLenientAdapter';\nimport getCustomAdapter from '@/json/adapter/getCustomAdapter';\nimport getNullAwareAdapter from '@/json/adapter/nullish/getNullAwareAdapter';\nimport getNullishAwareAdapter from '@/json/adapter/nullish/getNullishAwareAdapter';\nimport getUndefinedAwareAdapter from '@/json/adapter/nullish/getUndefinedAwareAdapter';\n\nconst JsonAdapters = {\n\tidentity: getIdentityAdapter,\n\tisoDate: getISODateAdapter,\n\tdateTimestamp: getDateTimestampAdapter,\n\tarray: getArrayJsonAdapter,\n\tset: getSetAdapter,\n\trecord: getRecordAdapter,\n\tmapAsEntries: getMapAsEntriesAdapter,\n\tmapAsRecord: getMapAsRecordAdapter,\n\tobject: getObjectAdapter,\n\tbyKey: getByKeyAdapter,\n\tbyKeyLenient: getByKeyLenientAdapter,\n\tcustom: getCustomAdapter,\n\tnullAware: getNullAwareAdapter,\n\tundefinedAware: getUndefinedAwareAdapter,\n\tnullishAware: getNullishAwareAdapter\n};\n\n\nexport default JsonAdapters;\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getISODateAdapter(): JsonAdapter<Date, string> {\n\treturn {\n\t\tadaptToJson(date) {\n\t\t\treturn date.toJSON();\n\t\t},\n\t\trecoverFromJson(isoDateText) {\n\t\t\treturn new Date(isoDateText);\n\t\t}\n\t};\n}\n","import JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getDateTimestampAdapter(): JsonAdapter<Date, number> {\n\treturn {\n\t\tadaptToJson(date) {\n\t\t\treturn date.getTime();\n\t\t},\n\t\trecoverFromJson(timestamp) {\n\t\t\treturn new Date(timestamp);\n\t\t}\n\t};\n}\n","import {JsonArray, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\nimport getArrayAdapter from '@/json/adapter/getArrayJsonAdapter';\nimport getIdentityAdapter from '@/json/adapter/getIdentityAdapter';\n\nexport default function getSetAdapter<T extends JsonValue = JsonValue>(): JsonAdapter<Set<T>, JsonArray<T>>;\nexport default function getSetAdapter<T, U extends JsonValue = JsonValue>(elementAdapter: JsonAdapter<T, U>): JsonAdapter<Set<T>, JsonArray<U>>;\nexport default function getSetAdapter<T>(elementAdapter: JsonAdapter<T, any> = getIdentityAdapter()): JsonAdapter<Set<T>, JsonArray<any>> {\n\n\tconst arrayAdapter = getArrayAdapter(elementAdapter);\n\n\treturn {\n\t\tadaptToJson(set) {\n\t\t\treturn arrayAdapter.adaptToJson([...set])!;\n\t\t},\n\t\trecoverFromJson(jsonArray) {\n\t\t\treturn new Set(arrayAdapter.recoverFromJson(jsonArray));\n\t\t}\n\t};\n\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getRecordAdapter<T, U extends JsonValue = JsonValue>(\n\t\tvalueAdapter: JsonAdapter<T, U>\n): JsonAdapter<Record<string, T>, JsonObject<U>> {\n\treturn {\n\t\tadaptToJson(object) {\n\n\t\t\tconst mappedEntries = Object.entries(object)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\treturn [key, valueAdapter.adaptToJson(value)];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\n\t\t\tconst mappedEntries = Object.entries(jsonObject)\n\t\t\t\t\t.map(([key, value]) => {\n\t\t\t\t\t\treturn [key, valueAdapter.recoverFromJson(value)];\n\t\t\t\t\t});\n\n\t\t\treturn Object.fromEntries(mappedEntries);\n\n\t\t}\n\t};\n}\n","import {JsonObject, JsonValue} from '@/json/types';\nimport {MapAdapterConfig} from '@/json/adapter/map/types';\nimport getMapAsEntriesAdapter from '@/json/adapter/map/getMapAsEntriesAdapter';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getMapAsRecordAdapter<K, V, JV extends JsonValue = JsonValue>(\n\t\tconfig?: Partial<MapAdapterConfig<K, V, string, JV>>\n): JsonAdapter<Map<K, V>, JsonObject<JV>> {\n\n\tconst mapAsEntriesAdapter = getMapAsEntriesAdapter(config);\n\n\treturn {\n\t\tadaptToJson(map) {\n\t\t\tconst adaptedEntries = mapAsEntriesAdapter.adaptToJson(map)!;\n\t\t\treturn Object.fromEntries(adaptedEntries);\n\t\t},\n\t\trecoverFromJson(jsonObject) {\n\t\t\tconst entries = Object.entries(jsonObject);\n\t\t\treturn mapAsEntriesAdapter.recoverFromJson(entries)!;\n\t\t}\n\t};\n\n}\n","import {StringKeyOf} from '@/json/adapter/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\n// TODO improve types so unknown values are not accepted\nexport default function getByKeyAdapter<T, R extends Record<string, T>>(\n\t\tkeyValuePairs: R\n): JsonAdapter<T, StringKeyOf<R>> {\n\treturn {\n\t\tadaptToJson(value) {\n\n\t\t\tconst entry = Object.entries(keyValuePairs).find(([, entryValue]) => value === entryValue);\n\n\t\t\tif (!entry) {\n\t\t\t\tthrow new Error('Provided value is not associated with any key');\n\t\t\t}\n\n\t\t\tconst [key] = entry;\n\n\t\t\treturn key;\n\n\t\t},\n\t\trecoverFromJson(key) {\n\n\t\t\tif (key == null || !keyValuePairs.hasOwnProperty(key)) {\n\t\t\t\tthrow new Error('Provided key is not associated with any value');\n\t\t\t}\n\n\t\t\treturn keyValuePairs[key];\n\n\t\t}\n\t};\n}\n","import {StringKeyOf} from '@/json/adapter/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T>>(keyValuePairs: R): JsonAdapter<T | undefined, StringKeyOf<R> | undefined>;\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T>>(keyValuePairs: R, fallbackKey: StringKeyOf<R>): JsonAdapter<T, StringKeyOf<R>>;\nexport default function getByKeyLenientAdapter<T, R extends Record<string, T>>(keyValuePairs: R, fallbackKey?: StringKeyOf<R>): JsonAdapter<T | undefined, StringKeyOf<R> | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\n\t\t\tconst entry = Object.entries(keyValuePairs).find(([, entryValue]) => value === entryValue);\n\n\t\t\tif (!entry) {\n\t\t\t\treturn fallbackKey;\n\t\t\t}\n\n\t\t\tconst [key] = entry;\n\n\t\t\treturn key;\n\n\t\t},\n\t\trecoverFromJson(key) {\n\t\t\tif (key != null && keyValuePairs.hasOwnProperty(key)) {\n\t\t\t\treturn keyValuePairs[key];\n\t\t\t} else if (fallbackKey != null) {\n\t\t\t\treturn keyValuePairs[fallbackKey];\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t};\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\n// This method exists only for type inference purposes\nexport default function getCustomAdapter<T, U extends JsonValue = JsonValue>(adapter: JsonAdapter<T, U>): JsonAdapter<T, U> {\n\treturn adapter;\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getNullAwareAdapter<T, U extends JsonValue = JsonValue>(adapter: JsonAdapter<T, U>): JsonAdapter<T | null, U | null> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn adapter.adaptToJson(value);\n\t\t\t}\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn adapter.recoverFromJson(value);\n\t\t\t}\n\t\t}\n\t};\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getUndefinedAwareAdapter<T, U extends JsonValue = JsonValue>(adapter: JsonAdapter<T, U>): JsonAdapter<T | undefined, U | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\treturn adapter.adaptToJson(value);\n\t\t\t}\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\treturn adapter.recoverFromJson(value);\n\t\t\t}\n\t\t}\n\t};\n}\n","import {JsonValue} from '@/json/types';\nimport JsonAdapter from '@/json/adapter/JsonAdapter';\n\nexport default function getNullishAwareAdapter<T, U extends JsonValue = JsonValue>(adapter: JsonAdapter<T, U>): JsonAdapter<T | null | undefined, U | null | undefined> {\n\treturn {\n\t\tadaptToJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\treturn adapter.adaptToJson(value);\n\t\t\t}\n\t\t},\n\t\trecoverFromJson(value) {\n\t\t\tif (value === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (value === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\treturn adapter.recoverFromJson(value);\n\t\t\t}\n\t\t}\n\t};\n}\n","import * as TrueJSON from './json/exports';\n\nexport default TrueJSON;\n"],"sourceRoot":""}